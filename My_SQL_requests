; Постройте СТЕ запросы для кол-ва заказов на водителя и O2R по водителю

with cnt_by_driver as (select   id_driver 
                              , count(*) as cnt
                       from skytaxi.order_list
                       where 1 = 1
                          and id_driver is not null
                       group by id_driver
                      )
    , o2r_by_driver as (select   id_driver 
                              , sum(case when order_finish_time is not null then 1 else 0 end)::float / count(*) as o2r
                       from skytaxi.order_list
                       where 1 = 1
                          and id_driver is not null
                       group by id_driver
    
                        )
select a.*,b.o2r
from cnt_by_driver a
    left join o2r_by_driver b
        on a.id_driver = b.id_driver
order by cnt desc


; Для каждого клиента позднего взыскания выведите его порядковый номер по дате получения кредита, порядковый номер по размеру кредита, порядковый номер по дате получения кредита в рамках его гендера, объём и кол-во выданных кредитов 
; его гендеру + минимальный и максимальный возраст заёмщиков его гендера

select     id_client
         , date_loan::date as d_loan
         , gender
         , age
         , amt_loan
         , row_number() over (order by date_loan::date desc) as rn_all_date
         , row_number() over (order by amt_loan desc) as rn_all_amt
         , row_number() over (partition by gender order by date_loan::date desc) as rn_gender_date
         ---
         , sum(amt_loan) over (partition by gender) sum_loan_by_gender
         , count(*) over (partition by gender) cnt_by_gender
         , max(age) over (partition by gender) max_age_by_gender
         , min(age) over (partition by gender) min_age_by_gender
         , max(age) over (partition by gender) - min(age) over (partition by gender) as razmah
         ---
         , variance(amt_loan) over (partition by gender) min_age_by_gender
from skybank.late_collection_clients
order by id_client


; Отработка оконных функций 2. Определите значение каждого поля:

select    t.*
        , avg(cnt) over (partition by debit_kind order by mm rows between 9 preceding and current row) as ma_cnt_10
        , avg(cnt) over (partition by debit_kind order by mm rows between 19 preceding and current row) as ma_cnt_20
        , sum(sum_pay) over (partition by debit_kind order by mm) sum_cum
        , sum(sum_pay) over (partition by debit_kind order by mm  rows between 2 preceding and current row) sum_cum_range
        --------
        , max(sum_pay) over () as max_sum_all
        , max(sum_pay) over (partition by debit_kind) as max_sum_debit
        , max(sum_pay) over (partition by debit_kind order by mm) as max_debit_cum
        --------
        , min(sum_pay) over () as min_sum_all
        , min(sum_pay) over (partition by debit_kind) as min_sum_debit
        , min(sum_pay) over (partition by debit_kind order by mm) as min_debit_cum
        -----------------------------
        , avg(cnt) over (partition by debit_kind order by mm rows between unbounded preceding and current row) as avg_cum_unb
        , avg(cnt) over (partition by debit_kind order by mm) as avg_cum_unb_2
        , avg(cnt) over (partition by debit_kind order by mm rows between unbounded preceding and 1 following) as aaa
        , cnt
        
from
(select    sum(amt_payment) sum_pay
        , count(*) as cnt
        , date_trunc('month',date_purchase) as mm
        , debit_kind
from skycinema.client_sign_up
group by debit_kind, mm
) t





; Большой запрос row_number: вывести порядковый номер покупки клиента в рамках всех, в рамках партнёра и в рамках самого себя. Проставить отсечки, на каком проценте выборки находится 
; данная покупка в рамках всех и в рамках конкретного партнёра.

select   t1.*       
    , t2.*       
    , t3.cnt_partner       
    , rn1::float / cnt::float       
    , rn2::float / cnt_partner::float
from (select   a.*       
			, name_partner       
			, row_number() over (partition by user_id order by date_purchase) rn       
			, row_number() over (order by date_purchase) rn1       
			, row_number() over (partition by name_partner order by date_purchase) rn2     
	from skycinema.client_sign_up a       
					left join skycinema.partner_dict b          
						  on a.partner = b.id_partner     
	order by date_purchase desc     
	) t1     
		left join (select count(*) cnt                
					from skycinema.client_sign_up               
               ) t2        
				 on 1=1    
		left join ( select  count(*) cnt_partner                      
                     , name_partner               
				    from skycinema.client_sign_up a                 
										left join skycinema.partner_dict b                   
											 on a.partner = b.id_partner               
                    group by name_partner             
               ) t3       
				 on t1.name_partner = t3.name_partner
where 1=1

; Посчитайте винтажное время заказа и на его основании рассчитайте усреднённый лайфтайм 

select avg(lifetime) avg_lt
from (select mm       
            , cnt_15/2+cnt_75/2+cnt_30+cnt_45+cnt_60 as lifetime
      from (select   date_part('hour',arrive_to_client_time) mm       
                   , sum(case when arrive_to_client_time + interval '15 minute' < order_finish_time then 1 else 0 end)::float/count(*) cnt_15       
								   , sum(case when arrive_to_client_time + interval '30 minute' < order_finish_time then 1 else 0 end)::float/count(*) cnt_30      
                   , sum(case when arrive_to_client_time + interval '45 minute' < order_finish_time then 1 else 0 end)::float/count(*) cnt_45      
                   , sum(case when arrive_to_client_time + interval '60 minute' < order_finish_time then 1 else 0 end)::float/count(*) cnt_60      
                   , sum(case when arrive_to_client_time + interval '75 minute' < order_finish_time then 1 else 0 end)::float/count(*) cnt_75       
                   , sum(case when arrive_to_client_time + interval '90 minute' < order_finish_time then 1 else 0 end)::float/count(*) cnt_90       
             from skytaxi.order_list
             where 1 = 1  
                and arrive_to_client_time is not null  
                and order_finish_time is not null 
       group by mm 
       order by mm
       ) t 
) t1

; Исследуйте O2R и составляющие его конверсии в июле по суточным часам

select    hours       
        , cnt_ride / cnt_all as O2R       
        , cnt_driver_found / cnt_all as O2AD       
        , cnt_assign / cnt_driver_found as ASS2OFF       
        , cnt_arrive / cnt_assign as CAME2ASS       
        , cnt_ride / cnt_arrive CAME2R
from (select  date_part('hour', order_time) as hours 		            
            --, name_tariff		            
            , count(*) cnt_all		            
            , sum(case when id_driver is not null then  1 else  0 end)::float as cnt_driver_found		            
			, sum(case when assign_time is not null then  1 else  0 end)::float as cnt_assign		            
			, sum(case when arrive_to_client_time is not null then  1 else  0 end)::float as cnt_arrive		            
			, sum(case when order_finish_time is not null then  1 else  0 end)::float as cnt_ride		    
       from skytaxi.order_list a		        
           left join  skytaxi.city_dict b		           
							 on a.id_city = b.id_city		        
					 left join  skytaxi.tariff_dict c		           
							 on a.id_tariff = c.id_tariff 		     
WHERE 1 = 1 		        
  AND order_time >= '2021-7-01, 00:00' 		       
  AND order_time <= '2021-7-31, 23:59'     
group by   hours             
           --, name_tariff     
order by hours     
) t


; Сделайте распределение количества заказов по дню, времени суток, тарифу и городу

select   count(*) as cnt_order
       , sum(case when order_finish_time is not null then 1 else 0 end)::float as cnt_ride
       , sum(case when order_finish_time is not null then 1 else 0 end)::float / count(*) as o2r
       , name_city
       , name_tariff
       , date_trunc('day',order_time) dd
       , case when date_part('hour',order_time) in (11,12,13,14,15,16) then 'day'
              when date_part('hour',order_time) in (17,18,19,20,21,22) then 'evening'
              when date_part('hour',order_time) in (5,6,7,8,9,10) then 'morning'
              else 'night' end day_part
from skytaxi.order_list a
    left join skytaxi.city_dict b
        on a.id_city = b.id_city
    left join skytaxi.tariff_dict c
        on a.id_tariff = c.id_tariff
where 1 = 1
group by name_city
       , name_tariff
       , dd
       , day_part
order by count(*) desc

; Сделайте бининг переменной возраста (считая её строкой, а не цифрой)
; и посчитайте кол-во строк по бинам возраста

select case when age between '18' and '25' then '18-25'        
			when age between '25' and '35' then '25-35'       
			when age between '35' and '45' then '35-45'       
			when age between '45' and '55' then '45-55'       
			when age between '55' and '65' then '55-65'       
			when age between '65' and '75' then '65-75'       
			when age between '75' and '90' then '75-90'       
			else '90+' end as group_year    
        ,  count(*) as cnt
 from skybank.late_collection_clients as a    
		left join skybank.rassrochka as b            
			on a.id_client = b.id_client    
  group by  group_year    
  order by group_year



; Для каждого года и каждого месяца выведите все показатели по кредиту: 
; сумму, кол-во, максимум, минимум, размах + то же самое по Москве и Питеру по отдельности

select  date_part('year',date_loan::date) yy            
      , date_part('month',date_loan::date) mm            
      , gender            
      --- В ЦЕЛОМ            
      , sum(amt_loan) amt_loan            
      , avg(amt_loan) avg_loan            
      , max(amt_loan) max_loan            
      , min(amt_loan) min_loan            
      , max(amt_loan) - min(amt_loan) размах            
      , count(*) cnt            
      --- В МОСКВЕ            
      , sum(case when name_city='Москва' then 1 else 0 end) as cnt_msk            
      , sum(case when name_city='Москва' then amt_loan else 0 end) amt_loan_msk     
       ---             
      , sum(case when name_city='Москва' or name_city='Санкт-Петербург' then 1 else 0 end) as cnt_spb_msk            
      , sum(case when name_city in ('Москва','Санкт-Петербург') then 1 else 0 end) as cnt_spb_msk_2            
      ---            
      , sum(case when name_city='Москва' or is_educ=1 then 1 else 0 end) as cnt_msk_or_educ            
	    , avg(case when cellphone is not null then amt_loan else 0 end) hh            
	    , avg(case when cellphone is not null then amt_loan else 0 end) - avg(case when cellphone is null then amt_loan else 0 end) delta    
from skybank.late_collection_clients a       
	left join skybank.rassrochka b            
		on a.id_client = b.id_client       
  left join skybank.region_dict c           
	  on a.id_city = c.id_city    
where 1=1      
 and gender is not null    
group by    yy             
			   	, mm             
				  , gender    
order by yy, mm


; Выделите 10 случайных заказов в Москве 21 июля, на которые был назначен водитель

select id_order
from skytaxi.order_list a  
	left join skytaxi.city_dict c           
		on a.id_city = c.id_city
where 1 = 1    
  and name_city = 'Москва'    
  and order_time <='2021-7-21,23:59'    
  and order_time >='2021-7-21,00:00'    
  and assign_time is not null   
order by random()     
limit 10

; Выведите кол-во замужних и не-замужних женщин старше 45 лет (включительно) 
; из позднего взыскания


select   count(*) as cnt      
       , married
from skybank.late_collection_clients
where 1=1  
  and gender = 'F'  
  and age >= 45
group by married

; Посчитайте средний возраст активных клиентов позднего взыскания

select avg(age) as avg_age
from skybank.late_collection_clients
where is_active = 1

; Сколько есть фильмов с жанром фэнтези, выпущенных раньше 2000 года (не    включительно)

select count(*) as cnt
from skycinema.content_list
where year<2000  
  and genre like '%фэнтези%'

; Отсоритруйте клиентов по количеству покупок

select  user_id       
		, count(*)
from skycinema.client_sign_up
group by user_id
order by count(*) desc


; Посчитайте кол-во раз, когда водитель стоял в очереди в аэропорту больше 12 часов.

select count(*) as cnt
from skytaxi.airport_visit
where 1=1
and time_came + interval '12 hour' < time_left

---------------------

select count(*) as cnt
from skytaxi.airport_visit
where 1=1
and time_left - time_came > '12 hour'

; Посчитайте долю фильмов, выпущенных между 1995 и 1999 годом включительно

select sum(case when year >= 1995 
           and year <= 1999 then 1 else 0 end)::float / count(*) as ratio
from skycinema.content_list t

; Посчитайте разницу между долей фильмов, в которых участвовали США, (среди всех фильмов) 
; и долей фильмов, которые создали США в одиночку (среди всех фильмов)

select   r1       
       , r2       
       , r1 - r2 as delta_r
from (select sum(case when country like '%США%' then 1 else 0 end)::float/count(*) as r1       
           , sum(case when country = 'США' then 1 else 0 end)::float/count(*) as r2
      from skycinema.content_list
      ) t

; На сколько процентных пунктов отличается процент фильмов, в которых участвует Япония (среди всех фильмов), от такого же процента мультфильмов 
; (мультфильмы с Японией среди всех мультфильмов)? 

select  share_cartoon        
      , share_all        
      , share_cartoon - share_all diff
from (select sum(case when lower(country) like '%япония%' then 1 else 0 end)::float/count(*) as share_all       
           , sum(case when genre like '%мультфильм%' and lower(country) like '%япония%' then 1 else 0 end)::float/sum(case when genre like '%мультфильм%' then 1 else 0 end)::float as share_cartoon
      from skycinema.content_list
      ) t

; Среди фильмов, которые произвели или США, или Великобритания, каково распределение 
; по странам?

select   ratio_both + ratio_uk + ratio_usa ratio_all
       , ratio_both
       , ratio_uk
       , ratio_usa
from (select   sum(case when lower(country) like '%сша%' and lower(country) like '%великобритания%' then 1 else 0 end)::float/count(*) as ratio_both
	           , sum(case when lower(country) not like '%сша%' and lower(country) like '%великобритания%' then 1 else 0 end)::float/count(*) as ratio_uk
	           , sum(case when lower(country)  like '%сша%' and lower(country) not like '%великобритания%' then 1 else 0 end)::float/count(*) as ratio_usa
	    from skycinema.content_list
	    where lower(country) like '%сша%' or lower(country) like '%великобритания%'
	    ) t

; Как с помощью подзапроса посмотреть, 
; на сколько из самых ранних в таблице 7 заказов были назначены водители?

select count(*) as cnt
from (  select *
        from skytaxi.order_list t
        order by order_time 
        limit 7
     ) t
where 1=1
  and assign_time is not null

; Какой процент мужчин старше 45 лет (включительно), получивших рассрочку, получил её 
; в течение первых 90 дней после даты выдачи кредита (включительно)? 

select sum(case when date_rassrochka - date_loan::date<=90 then 1 else 0 end)::float
	     /count(*) as ratio
from skybank.late_collection_clients a    
		join skybank.rassrochka b       
			 on a.id_client = b.id_client
where 1 = 1    
  and gender = 'M'     
  and age>=45

; Проверьте гипотезу: вклад Японии в мировой кинематограф (на основании 
; таблицы content_list) в последнее время намного больше, чем был раньше

select   (year/10)*10 yy
       , sum(case when lower(country) like '%япония%' then 1 else 0 end)::float / count(*) ratio_japan 
       , count(*) as cnt
from skycinema.content_list
where 1 = 1
group by yy
order by yy

; Постройте распределение просмотров по десятилетию выпуска фильмов , 
; которые смотрят в течение 3 дней (включительно) после входа в бесплатную первичную покупку

select   (year/10)*10 yy
       , count(*) as cnt
from skycinema.client_sign_up a         
		left join skycinema.watch_client b            
				on a.user_id = b.user_id        
		left join skycinema.content_list c            
				on b.content_id = c.id    
where 1=1      
  and date_watch<=date_purchase+3      
  and is_trial = 1     
  and year is not null
group by yy    
order by yy


; Отранжируйте все города кроме МСК и МСК-области по общему 
; объёму выданных кредитов (позднее взыскание)

select   name_city
       , sum(amt_credit) as sum_cr
from skybank.early_collection_clients a
    left join skybank.region_dict b
        on a.id_city = b.id_city
where lower(name_city) not like '%москв%'
group by name_city
order by sum(amt_credit) desc

; Проверьте, у скольких клиентов в таблице раннего в
; зыскания отсутствуют внутренние и внешние id

select   count(*)
       , sum(case when id_client is not null then 1 else 0 end) cnt_cl
       , sum(case when id_global is not null then 1 else 0 end) cnt_gl
       , sum(case when id_global is not null and id_client is null then 1 else 0 end) cnt_1
from skybank.early_collection_clients a
    left join skybank.region_dict b
        on a.id_city = b.id_city

; Постройте распределение количества просмотров по десятилетиям даты выхода и партнёрам
select   (year/10)*10 as yy
       , name_partner
       , count(*) as cnt
from skycinema.watch_client a
    left join skycinema.content_list b
        on a.content_id = b.id
    left join skycinema.client_sign_up c
        on a.user_id = c.user_id
    left join skycinema.partner_dict d
        on c.partner = d.id_partner
where 1 =1 
group by   name_partner
         , yy
order by yy

; Рассчитайте средний LTV на основании месячных когорт 

select avg(ltv)
from (select      mm               
				, lifetime * arpu as ltv     
      from (select   mm                 
					, (coalesce(avg_pay_1, 0.0) + coalesce(avg_pay_2, 0.0) 
                    + coalesce(avg_pay_3, 0.0) + coalesce(avg_pay_4, 0.0) 
                    + coalesce(avg_pay_5, 0.0) + coalesce(avg_pay_6, 0.0)) / 6 as arpu  

					, r_1 / 2 + r_2 + r_3 + r_4 + r_5 + r_6 / 2 as lifetime            
            from (  select   mm                   
                          --, name_partner                   
                        , cnt_1 / cnt_1 as r_1                  
					    , cnt_2 / cnt_1 as r_2                   
                        , cnt_3 / cnt_1 as r_3                   
						, cnt_4 / cnt_1 as r_4                   
						, cnt_5 / cnt_1 as r_5                 
						, cnt_6 / cnt_1 as r_6                   
						-------                   
                        , amt_1 / nullif(cnt_1, 0.0) as avg_pay_1                  
						, amt_2 / nullif(cnt_2, 0.0) as avg_pay_2             
						, amt_3 / nullif(cnt_3, 0.0) as avg_pay_3                   
                        , amt_4 / nullif(cnt_4, 0.0) as avg_pay_4                   
						, amt_5 / nullif(cnt_5, 0.0) as avg_pay_5                   
						, amt_6 / nullif(cnt_6, 0.0) as avg_pay_6                   
				        -------                
					from (  select  date_trunc('quarter',min_date) mm                             
								    --, name_partner                               
                                    , sum(case when rn = 1 then 1 else 0 end)::float cnt_1             
							        , sum(case when rn = 2 then 1 else 0 end)::float cnt_2                             
									, sum(case when rn = 3 then 1 else 0 end)::float cnt_3                
									, sum(case when rn = 4 then 1 else 0 end)::float cnt_4      
				                    , sum(case when rn = 5 then 1 else 0 end)::float cnt_5        
					                , sum(case when rn = 6 then 1 else 0 end)::float cnt_6                  
                                    ---                             
																  , sum(case when rn = 1 then amt_payment else 0 end) amt_1           
						            , sum(case when rn = 2 then amt_payment else 0 end) amt_2        
						            , sum(case when rn = 3 then amt_payment else 0 end) amt_3       
						            , sum(case when rn = 4 then amt_payment else 0 end) amt_4      
						            , sum(case when rn = 5 then amt_payment else 0 end) amt_5         
						            , sum(case when rn = 6 then amt_payment else 0 end) amt_6              
						             ---                        
                            from (  select    user_id
											, debit_kind                           
											, is_trial        
					                        , date_purchase      
				                            , amt_payment     
				                            , partner         
							                , name_partner        
						                    , row_number() over (partition by user_id order by date_purchase) as rn                        
									from skycinema.client_sign_up a                                 
										left join skycinema.partner_dict b                                    
											on a.partner = b.id_partner                             
			                        where 1=1
                                        and is_trial in (-1,0)                            
								) t1                           
							left join ( select  user_id      
							                    , min(date_purchase) min_date    
				                        from skycinema.client_sign_up      
						                where is_trial in (-1,0)             
										group by user_id                             
									    ) t2                        
											 on t1.user_id = t2.user_id    
                             group by    mm    
                             --, name_partner   
                            order by mm                  
                       ) t         
				 ) s      
			) d       
		 ) c

; Объедините без повторений всех водителей из витрины заказов и витрины заездов в аэропорт

select * from skytaxi.order_list
where id_driver is not null

UNION

select * from skytaxi.airport_visit

; Найдите долю жанров в общем количестве фильмов, 
; но только по тем жанрам, которые имеют больше 5 фильмов

select   genre
       , cnt_genre::float / cnt_all::float as rr
from (select    genre
                , count(*) as cnt_genre    
     from skycinema.content_list
     group by genre
     having count(*) > 5
     order by cnt_genre desc
     ) t
        left join ( select count(*) as cnt_all
                    from skycinema.content_list
                    ) t_all
            on 1 = 1


; Рассчитайте сумму банковских резервов по раннему и позднему взысканию на сегодняшний день, 
; опираясь на коэффициенты резервирования

select sum(amt_credit*coeff) sum_res
from (
select    id_client 
        , amt_credit
        , case when (current_date - last_paid_inst)<=15 then 1
        when (current_date - last_paid_inst)<=30 then 2
        when (current_date - last_paid_inst)<=60 then 3
        when (current_date - last_paid_inst)<=90 then 4
        when (current_date - last_paid_inst)<=120 then 5
        when (current_date - last_paid_inst)<=150 then 6
        when (current_date - last_paid_inst)<=180 then 7
        else 8 end bucket
from skybank.early_collection_clients
where 1 = 1
  and last_paid_inst is not null

union all

select   id_client 
        , amt_loan as amt_credit
        , 8 as bucket
 from skybank.late_collection_clients
) t
    left join (select * from skybank.bucket_coeff 
               where valid_to = '3000-01-01'
               ) c
        on t.bucket = c.id_bucket


; Постройте винтажное распределение времени стояния в аэропорту по аэропортам, 
; используя cross join

select   id_port
       , hours
       , count(*) as cnt_all
       , sum(case when extract(hour from (time_left - time_came)) > hours.column1 then 1 end)::float / count(*)::float as conversion
from skytaxi.airport_visit av
    cross join (VALUES (1), (2), (3), (4), (5), (6), (7), (8)) hours
where (time_left - time_came) < interval '1 day'
group by  id_port
        , hours
order by id_port, hours

